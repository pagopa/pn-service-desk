AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  # Instance parameters
  # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
  # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
  # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
  # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
  # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
  CpuValue:
    Type: Number
    Default: 1024
    Description: Fargate virtual CPU quantity 1024 equals one vCPU

  # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
  # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
  # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
  # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
  # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
  MemoryAmount:
    Type: String
    Default: 2GB
    Description: memory amount reserved to the task pod.
    AllowedValues: [ 2GB, 4GB, 6GB, 8GB ]

  HealthCheckInterval:
    Description: Seconds between two health check
    Type: Number
    Default: 60

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  # Autoscaling parameters
  AutoscalingCheckPeriod:
    Default: 60
    Type: Number
    Description: minimum autoscaling number of tasks\

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingThreshold:
    Default: 70
    Type: String

  MinTasksNumber:
    Default: 1
    Type: Number
    Description: minimum autoscaling number of tasks

  MaxTasksNumber:
    Default: 6
    Type: Number
    Description: maximum autoscaling number of tasks

  HealthCheckTimeout:
    Description: health check timeout seconds
    Type: Number
    Default: 5

  HealthyThresholdCount:
    Description: |
      The number of consecutive health checks successes required before considering
      an unhealthy target healthy.
    Type: Number
    Default: 5

  UnhealthyThresholdCount:
    Description: |
      The number of consecutive health check failures required before considering a target unhealthy.
    Type: Number
    Default: 2

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ServiceDeskInternalQueueName:
    Type: String
    Description: 'Send and pull requests in this queue'

  ServiceDeskInternalQueueARN:
    Type: String
    Description: 'Send and pull requests in this queue'

  PaperChannelToServiceDeskQueueName:
    Type: String
    Description: 'Send and pull requests in this queue between ServiceDesk and Paperchannel'

  PaperChannelToServiceDeskQueueARN:
    Type: String
    Description: 'Send and pull requests in this queue between ServiceDesk and Paperchannel'

  SafeStorageToServiceDeskQueueName:
    Type: String
    Description: 'Send and pull requests in this queue between ServiceDesk and Paperchannel'

  SafeStorageToServiceDeskQueueARN:
    Type: String
    Description: 'Send and pull requests in this queue between ServiceDesk and SafeStorage'

  ServiceDeskKmsEncDecDynamoDataKeyARN:
    Type: String
    Description: 'Name of KMS Key for Dynamo encode/decode data'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  ServiceDeskOperationsDynamoTableName:
    Type: String
    Description: Name of dynamodb table containing request


  ServiceDeskOperationsDynamoTableArn:
    Type: String
    Description: ARN of dynamodb table containing request


  ServiceDeskAddressDynamoTableName:
    Type: String
    Description: Name of dynamodb table containing request


  ServiceDeskAddressDynamoTableArn:
    Type: String
    Description: ARN of dynamodb table containing request


  ServiceDeskOperationFileKeyDynamoTableName:
    Type: String
    Description: Name of dynamodb table containing request


  ServiceDeskOperationFileKeyDynamoTableArn:
    Type: String
    Description: ARN of dynamodb table containing request


  SafeStorageCxId:
    Type: String
    Description: 'SafeStorage cx-id'

  SafeStorageDocumentType:
    Type: String
    Description: 'SafeStorage cx-id'

  SandboxSafeStorageBaseUrl:
    Type: String
    Description: 'Url to the SafeStorage microservice'

  DataVaultBaseUrl:
    Type: String
    Description: 'DataVault BaseUrl'

  AddressManagerCxId:
    Type: String
    Description: 'AddressManager cx-id'

  PaperChannelCxId:
    Type: String
    Description: 'PaperChannel cx-id'

  AddressManagerApiKey:
    Type: String
    Description: 'AddressManager api-key'

  AddressManagerBaseUrl:
    Type: String
    Description: 'Address Manager BaseUrl'

  TtlReceiverAddress:
    Type: String
    Description: 'Time to live for receiver address'

  ProductType:
    Type: String
    Description: 'Product type for notification'

  ServicedeskApiDnsName:
    Type: String
    Description: Service Desk API 

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

Resources:

  # PN-TemplateBeMs microservice
  ServiceDeskMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-service-desk'
        CpuValue: !Ref CpuValue
        MemoryAmount: !Ref MemoryAmount
        HealthCheckTimeout: !Ref HealthCheckTimeout
        HealthCheckInterval: !Ref HealthCheckInterval
        HealthyThresholdCount: !Ref HealthyThresholdCount
        UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'CORS_ALLOWED_DOMAINS=${CorsAllowedDomains}, http://localhost:3000, https://portale-pa.dev.pn.pagopa.it'
        ContainerEnvEntry3: !Sub 'AWS_DYNAMODBOPERATIONSTABLE=${ServiceDeskOperationsDynamoTableName}'
        ContainerEnvEntry4: !Sub 'AWS_DYNAMODBADDRESSTABLE=${ServiceDeskAddressDynamoTableName}'
        ContainerEnvEntry5: !Sub 'AWS_DYNAMODBFILEKEYTABLE=${ServiceDeskOperationFileKeyDynamoTableName}'
        ContainerEnvEntry6: !Sub 'AWS_KMS_KEYID=${ServiceDeskKmsEncDecDynamoDataKeyARN}'
        ContainerEnvEntry7: !Sub 'AWS_KMS_REGION=${AWS::Region}'
        ContainerEnvEntry8: !Sub 'PN_SERVICEDESK_DATAVAULTBASEPATH=${DataVaultBaseUrl}'
        ContainerEnvEntry9: !Sub 'PN_SERVICEDESK_RADDFSUBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry10: !Sub 'PN_SERVICEDESK_SAFESTORAGEBASEPATH=${SandboxSafeStorageBaseUrl}'
        ContainerEnvEntry11: !Sub 'PN_SERVICEDESK_TOPICS_INTERNALQUEUE=${ServiceDeskInternalQueueName}'
        ContainerEnvEntry12: !Sub 'PN_SERVICEDESK_TOPICS_PAPERCHANNELQUEUE=${PaperChannelToServiceDeskQueueName}'
        ContainerEnvEntry13: !Sub 'PN_SERVICEDESK_TOPICS_SAFESTORAGEEVENTS=${SafeStorageToServiceDeskQueueName}'
        ContainerEnvEntry14: !Sub 'PN_SERVICEDESK_SAFESTORAGECXID=${SafeStorageCxId}'
        ContainerEnvEntry15: !Sub 'PN_SERVICEDESK_SAFESTORAGEDOCUMENTTYPE=${SafeStorageDocumentType}'
        ContainerEnvEntry16: !Sub 'SPRING_CLOUD_FUNCTIONROUTER_QUEUES_LIST=${SafeStorageToServiceDeskQueueName},${ServiceDeskInternalQueueName},${PaperChannelToServiceDeskQueueName}'
        ContainerEnvEntry17: !Sub 'PN_SERVICEDESK_ADDRESSMANAGERBASEPATH=${AddressManagerBaseUrl}'
        ContainerEnvEntry18: !Sub 'PN_SERVICEDESK_DELIVERYPUSHBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry19: !Sub 'PN_SERVICEDESK_DELIVERYBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry20: !Sub 'PN_SERVICEDESK_ADDRESSMANAGERCXID=${AddressManagerCxId}'
        ContainerEnvEntry21: !Sub 'PN_SERVICEDESK_PAPERCHANNELCXID=${PaperChannelCxId}'
        ContainerEnvEntry22: !Sub 'PN_SERVICEDESK_TTLRECEIVERADDRESS=${TtlReceiverAddress}'
        ContainerEnvEntry23: !Sub 'PN_SERVICEDESK_PAPERCHANNELBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry24: !Sub 'PN_SERVICEDESK_PRODUCTTYPE=${ProductType}'

        ContainerSecret1: !Sub 'PN_SERVICEDESK_ADDRESSMANAGERAPIKEY=arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pn-ServiceDesk-Secrets:AddressManagerApiKey:AWSCURRENT:'
        MicroServiceSecretPrefix: pn-ServiceDesk-Secrets
        MappedPaths: '/service-desk/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        TaskRoleManagedPolicyArn: !Ref ServiceDeskMicroserviceTaskPolicy
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn

  ServiceDeskMicroserviceTaskPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:ChangeMessageVisibilityBatch
              - sqs:DeleteMessage
              - sqs:DeleteMessageBatch
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
              - sqs:SendMessage
              - sqs:SendMessageBatch
            Resource:
              - !Ref ServiceDeskInternalQueueARN
              - !Ref SafeStorageToServiceDeskQueueARN
              - !Ref PaperChannelToServiceDeskQueueARN
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
            Resource:
              - !Ref ServiceDeskKmsEncDecDynamoDataKeyARN
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ExecuteTransaction
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:TransactGetItems
              - dynamodb:TransactWriteItems
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${ServiceDeskOperationsDynamoTableArn}"
              - !Sub "${ServiceDeskOperationsDynamoTableArn}/*"
              - !Sub "${ServiceDeskAddressDynamoTableArn}"
              - !Sub "${ServiceDeskAddressDynamoTableArn}/*"
              - !Sub "${ServiceDeskOperationFileKeyDynamoTableArn}"
              - !Sub "${ServiceDeskOperationFileKeyDynamoTableArn}/*"

  ServiceDeskMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-service-desk"
        AlarmArns: !Join
          - ','
          - - !GetAtt ServiceDeskMicroservice.Outputs.FatalLogsMetricAlarmArn
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-service-desk'

  # Expose PN-ServiceDesk microservice public API with API-GW for ServiceDesk Backend usage
  ServiceDeskMicroservicePublicSDAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-expose-service-openapi.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-service-desk'
        IntendedUsage: SERVICEDESK
        DnsName: !Ref ServicedeskApiDnsName
        ProjectName: !Ref ProjectName
        ServiceApiPath: 'service-desk'
        NetworkLoadBalancerLink: !Ref NetworkLoadBalancerLink
        ApplicationLoadBalancerDomain: !Ref ApplicationLoadBalancerDomain
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        OpenApiBucketName: !Ref MicroserviceBucketName
        OpenApiBucketKey: !Sub ${MicroserviceBucketBaseKey}/docs/openapi/aws/api-service-desk-SERVICEDESK-aws.yaml

  ServiceDeskMicroservicePublicSDAPIWaf:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-waf-acl.yaml"
      Parameters:
        WAFName: !Sub '${ProjectName}-service-desk'
        IntendedUsage: SERVICEDESK
        APIGatewayARNs: !GetAtt ServiceDeskMicroservicePublicSDAPI.Outputs.APIGatewayARN
        Limit: 0 # disable IP limit based rule
        # AllowedCidrs: !Ref ServicedeskBackendCidrs        