AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ScheduledRequestsQueueARN:
    Type: String
    Description: 'Send and pull requests in this queue'

  PCKmsEncDecDynamoDataKeyARN:
    Type: String
    Description: 'Name of KMS Key for Dynamo encode/decode data'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'

  DataVaultBaseUrl:
    Type: String
    Description: 'DataVault BaseUrl'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  ServiceDeskOperationsDynamoTableName:
    Description: Name of dynamodb table containing request
    Value: !Ref ServiceDeskOperationsDynamoTable

  ServiceDeskOperationsDynamoTableArn:
    Description: ARN of dynamodb table containing request
    Value: !Sub '${ServiceDeskOperationsDynamoTable.Arn}'

  ServiceDeskAddressDynamoTableName:
    Description: Name of dynamodb table containing request
    Value: !Ref ServiceDeskAddressDynamoTable

  ServiceDeskAddressDynamoTableArn:
    Description: ARN of dynamodb table containing request
    Value: !Sub '${ServiceDeskAddressDynamoTable.Arn}'

  ServiceDeskOperationFileKeyDynamoTableName:
    Description: Name of dynamodb table containing request
    Value: !Ref ServiceDeskOperationFileKeyDynamoTable

  ServiceDeskOperationFileKeyDynamoTableArn:
    Description: ARN of dynamodb table containing request
    Value: !Sub '${ServiceDeskOperationFileKeyDynamoTable.Arn}'

Resources:

  # PN-TemplateBeMs microservice
  TemplateBeMsMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-template-ms-be'
        CpuValue: 512
        MemoryAmount: 2GB
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'CORS_ALLOWED_DOMAINS=${CorsAllowedDomains}, http://localhost:3000, https://portale-pa.dev.pn.pagopa.it'
        ContainerEnvEntry3: !Sub 'AWS_DYNAMODBOPERATIONSTABLE=${ServiceDeskOperationsDynamoTableName}'
        ContainerEnvEntry4: !Sub 'AWS_DYNAMODBADDRESSTABLE=${ServiceDeskAddressDynamoTableName}'
        ContainerEnvEntry5: !Sub 'AWS_DYNAMODBFILEKEYTABLE=${ServiceDeskOperationFileKeyDynamoTableName}'
        ContainerEnvEntry18: !Sub 'AWS_KMS_KEYID=${PCKmsEncDecDynamoDataKeyARN}'
        ContainerEnvEntry19: !Sub 'AWS_KMS_REGION=${AWS::Region}'
        ContainerEnvEntry20: !Sub 'PN_SERVICEDESK_CLIENTDATAVAULTBASEPATH=${DataVaultBaseUrl}'
        ContainerEnvEntry21: !Sub 'PN_SERVICEDESK_QUEUE=${queue}'
        MappedPaths: '/template-ms-be/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        TaskRoleManagedPolicyArn: !Ref TemplateBeMsMicroservicePolicy
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
  TemplateBeMsMicroservicePolicy:
    Type: AWS::IAM::ManagedPolicy
    PolicyDocument:
      Resource:
        - !Ref ScheduledRequestsQueueARN
        - Effect: Allow
          Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
          Resource:
            - !Ref PCKmsEncDecDynamoDataKeyARN
        - Effect: Allow
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:ExecuteTransaction
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:TransactGetItems
            - dynamodb:TransactWriteItems
            - dynamodb:UpdateItem

