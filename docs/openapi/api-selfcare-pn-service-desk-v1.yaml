openapi: 3.0.3
info:
  title: PN Service-Desk BE Microservice
  description: Documentation APIs v1.0 di Service Desk
  termsOfService: https://termofservice.it
  x-api-id: api-pn-service-desk
  x-summary: 'Service Desk: API B2B per Cruscotto Assistenza'
  version: '1.0.0'
  contact:
    email: pn@pagopa.it
    name: PagoPA
  license:
    name: Licenza di PN
    url: 'https://da-definire/'
servers:
  - url: https://api.pn.pagopa.it
    description: Generated server url
tags:
  - name: HealthCheck
    description: >-
      Invocations to check the status of the microservice
  - name: NotificationAndMessage
    description: >-
      Invocations to retrieve user notification and courtesy messages
  - name: PA
    description: >-
      Invocations for PAs
  - name: Profile
    description: >-
      Invocations to user profile


paths:
  '/status':
    get:
      summary: healthCheck path
      description: health check path to check microservice status
      tags:
        - HealthCheck
      operationId: status
      responses:
        '200':
          description: Ok
        '500':
          description: Internal Server Error

  '/service-desk/pa/activated-on-pn':
    get:
      operationId: getListOfOnboardedPA
      summary: List all PA that use PN
      description: List all PA that use PN
      tags:
        - PA
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaSummariesResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/courtesy-message/search':
    post:
      operationId: searchCourtesyMessagesFromTaxId
      summary: Retrieve all cortesy messages sent to recipient
      description: Retrieve all cortesy messages sent to recipient
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - $ref: '#/components/parameters/queryStartDate'
        - $ref: '#/components/parameters/queryEndDate'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCourtesyMessagesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourtesyMessagesResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/profile':
    post:
      operationId: getProfileFromTaxId
      summary: Retrieve profile of recipient
      description: Retrieve profile of recipient
      tags:
        - Profile
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/notifications':
    post:
      operationId: searchNotificationsFromTaxId
      summary: Retrieve all notifications sent to recipient
      description: Retrieve all notifications sent to recipient
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/notification/{iun}':
    get:
      operationId: getNotificationFromIUN
      summary: Retrieve notification detail by IUN
      description: Retrieve notification detail by IUN
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - name: iun
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IUN'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetailResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/notification/{iun}/timeline':
    get:
      operationId: getTimelineOfIUN
      summary: Retrieve entire timeline of IUN
      description: Retrieve entire timeline of IUN
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - name: iun
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IUN'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/notification/{iun}/documents':
    get:
      operationId: getDocumentsOfIUN
      summary: Retrieve all documents of IUN
      description: Retrieve all documents of IUN
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - name: iun
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IUN'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'


  '/service-desk/notifications/delegate':
    post:
      operationId: searchNotificationsAsDelegateFromTaxId
      summary: Retrieve all notifications sent to recipient as delegate
      description: Retrieve all notifications sent to recipient as delegate
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsDelegateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/notifications/delegator':
    post:
      operationId: searchNotificationsAsDelegatorFromTaxId
      summary: Retrieve all notifications sent to recipient as delegator
      description: Retrieve all notifications sent to recipient as delegator
      tags:
        - NotificationAndMessage
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsDelegatorRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/service-desk/pa/notifications':
    post:
      operationId: searchNotificationsFromSenderId
      summary: Retrieve all notifications sent from PA
      description: Retrieve all notifications sent from PA
      tags:
        - PA
      parameters:
        - $ref: '#/components/parameters/cxOperatorClientAuthFleet'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaNotificationsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  schemas:
    SelfCarePaId:
      title: The PA id used by self care
      description: An unique ID that identify a Public Administration
      type: string
      minLength: 1
      maxLength: 50
      pattern: ^[ -~ ]*$

    PaSummary:
      title: PA in short
      description: PA with minimal information
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        name:
          type: string

    PaSummariesResponse:
      title: Brief list of PAs
      description: Contains a list of PA with minimal information
      type: array
      items:
        $ref: '#/components/schemas/PaSummary'

    SearchCourtesyMessagesRequest:
      required:
        - taxId
        - recipientType
      type: object
      properties:
        taxId:
          type: string
          maxLength: 32
          x-field-extra-annotation: "@lombok.ToString.Exclude"
        recipientType:
          $ref: '#/components/schemas/RecipientType'
      additionalProperties: false

    SearchCourtesyMessagesResponse:
      description: Search courtesy messages response
      type: object
      allOf:
        - $ref: '#/components/schemas/Page'
      properties:
        notifications:
          type: array
          minItems: 0
          maxItems: 999999999
          items:
            $ref: '#/components/schemas/CourtesyMessageResponse'
      additionalProperties: false

    CourtesyMessageResponse:
      properties:
        iun:
          type: string
          maxLength: 99999
        paId:
          type: string
          maxLength: 99999
          description: >-
            Identifier of PA that sent the courtesy message
        courtesyMessages:
          type: array
          items:
            $ref: '#/components/schemas/Notification'

    CourtesyMessage:
      type: object
      required:
        - sentTimestamp
        - channel
      properties:
        sentTimestamp:
          type: string
          format: date-time
          description: >-
            Courtesy message UTC sent timestamp
        channel:
          $ref: '#/components/schemas/CourtesyChannelType'


    ProfileRequest:
      required:
        - taxId
        - recipientType
      type: object
      properties:
        taxId:
          type: string
          maxLength: 32
          x-field-extra-annotation: "@lombok.ToString.Exclude"
        recipientType:
          $ref: '#/components/schemas/RecipientType'
      additionalProperties: false

    ProfileResponse:
      type: object
      required:
        - userAddresses
        - mandates
      properties:
        userAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/Mandate'

    Address:
      type: object
      allOf:
        - type: object
          required:
            - courtesyAddressType
            - courtesyChannelType
            - courtesyValue
            - legalAddressType
            - legalChannelType
            - legalValue
          properties:
            courtesyAddressType:
              $ref: '#/components/schemas/CourtesyAddressType'
            courtesyValue:
              type: string
              x-field-extra-annotation: "@lombok.ToString.Exclude"
              example: 'nome.utente@server.it'
            courtesyChannelType:
              $ref: '#/components/schemas/CourtesyChannelType'
            legalAddressType:
              $ref: '#/components/schemas/LegalAddressType'
            legalValue:
              type: string
              x-field-extra-annotation: "@lombok.ToString.Exclude"
              example: 'nome.utente@server.it'
            legalChannelType:
              $ref: '#/components/schemas/LegalChannelType'

    RecipientType:
      title: 'Tipo del destinatario: PF / PG'
      description: >-
        ### Tipo del destinatario
          - PF: Persona Fisica
          - PG: Persomna Giuridica
      type: string
      enum:
        - PF
        - PG

    CourtesyAddressType:
      type: string
      description: Valore addresstype per courtesy
      enum:
        - COURTESY

    CourtesyChannelType:
      type: string
      description: Communication Channel types __without__ legal value
      enum:
        - EMAIL
        - SMS
        - APPIO

    LegalChannelType:
      type: string
      description: Communication Channel types __with__ legal value
      enum:
        - PEC
        - APPIO

    LegalAddressType:
      type: string
      description: Valore addresstype per legal
      enum:
        - LEGAL

    Mandate:
      type: object
      properties:
        mandateId:
          description: internal identifier of mandate
          type: string
        delegator:
          description: taxId of delegator
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude"
        delegate:
          description: taxId of delegate
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude"
        datefrom:
          description: mandate start date (ISO 8601 format)
          type: string
        dateto:
          description: mandate end date (ISO 8601 format)
          type: string

    NotificationsRequest:
      required:
        - taxId
        - recipientType
      type: object
      properties:
        taxId:
          type: string
          maxLength: 32
          x-field-extra-annotation: "@lombok.ToString.Exclude"
        recipientType:
          $ref: '#/components/schemas/RecipientType'
      additionalProperties: false

    NotificationsResponse:
      description: Get all Notifications response
      type: object
      allOf:
        - $ref: '#/components/schemas/Page'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
      additionalProperties: false


    Notification:
      description: single notification
      type: object
      properties:
        iun:
          $ref: '#/components/schemas/IUN'
        sender:
          type: string
          description: Denominazione della PA che ha inviato l'atto.
        sentAt:
          type: string
          description: Data spedizione notifica
          format: date-time
        subject:
          type: string
          description: Oggetto della notifica
        notificationStatusDetail:
          $ref: '#/components/schemas/notificationStatusDetail'

    IUN:
      description: Identificativo Univoco Notifica
      type: string
      minLength: 25
      maxLength: 25
      pattern: ^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$

    notificationStatusDetail:
      type: string
      description: >
        stato di avanzamento del processo di notifica:
          * `IN_VALIDATION` - notifica depositata in attesa di validazione
          * `ACCEPTED` - L'ente ha depositato la notifica con successo
          * `REFUSED` - Notifica rifiutata a seguito della validazione
          * `DELIVERING` - L'invio della notifica è in corso
          * `DELIVERED` - La notifica è stata consegnata a tutti i destinatari
          * `VIEWED` - Il destinatario ha letto la notifica entro il termine stabilito
          * `EFFECTIVE_DATE` - Il destinatario non ha letto la notifica entro il termine stabilito
          * `PAID` - Uno dei destinatari ha pagato la notifica
          * `UNREACHABLE` - Il destinatario non è reperibile
          * `CANCELLED` - L'ente ha annullato l'invio della notifica
      enum:
        - IN_VALIDATION
        - ACCEPTED
        - REFUSED
        - DELIVERING
        - DELIVERED
        - VIEWED
        - EFFECTIVE_DATE
        - PAID
        - UNREACHABLE
        - CANCELLED


    NotificationDetailResponse:
      description: notification detail
      type: object
      required:
        - paProtocolNumber
        - subject
        - recipients
        - hasDocuments
        - physicalCommunicationType
        - senderDenomination
        - senderTaxId
        - sentAt
        - hasPayments
      properties:
        paProtocolNumber:
          description: >-
            Numero di protocollo che la PA mittente assegna alla notifica stessa
          type: string
          # wide range of characters
          pattern: ^.*$
          maxLength: 256
        subject:
          type: string
          description: titolo della notifica, NON inserire dati personali/sensibili
          minLength: 10
          maxLength: 134
          # wide range of characters
          pattern: ^.*$
        abstract:
          type: string
          description: descrizione sintetica della notifica, NON inserire dati personali/sensibili
          # wide range of characters
          pattern: ^.*$
          maxLength: 1024
        recipients:
          $ref: "#/components/schemas/NotificationRecipient"
        hasDocuments:
          type: boolean
          description: Indica la presenza di documenti
        physicalCommunicationType:
          type: string
          description: Tipologia comunicazione fisica
          enum:
            - AR_REGISTERED_LETTER
            - REGISTERED_LETTER_890
        senderDenomination:
          $ref: '#/components/schemas/Denomination'
        senderTaxId:
          $ref: '#/components/schemas/PaTaxId'
        amount:
          type: integer
          format: int32
          description: Importo della notifica in eurocent
        paymentExpirationDate:
          type: string
          minLength: 10
          maxLength: 10
          pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$"
          description: Data di scadenza del pagamento nel formato YYYY-MM-DD riferito all'Italia
          # gestito come stringa e pattern perché con format: date open-api-generator non lo gestiva correttamente
        sentAt:
          type: string
          description: Momento di ricezione della notifica da parte di PN
          format: date-time
        hasPayments:
          type: boolean
          description: Indica la presenza di avvisi di pagamento e/o F24

    NotificationRecipient:
      description: Informazioni sui destinatari
      required:
        - denomination
        - recipientType
        - taxId
        - physicalAddress
      type: object
      properties:
        recipientType:
          type: string
          description: 'Tipologia di destinatario: Persona Fisica (PF) o Persona Giuridica
            (PG)'
          enum:
            - PF
            - PG
        taxId:
          $ref: '#/components/schemas/TaxId'
        internalId:
          type: string
          description: id interno anonimizzato
        denomination:
          $ref: '#/components/schemas/Denomination'
        digitalDomicile:
          $ref: "#/components/schemas/NotificationDigitalAddress"
        physicalAddress:
          $ref: "#/components/schemas/NotificationPhysicalAddress"

    Denomination:
      description: Denominazione ente o persona fisica / ragione sociale
      type: string
      x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
      minLength: 1
      maxLength: 80
      pattern: ^.*$

    TaxId:
      description: C.F. persona fisica o persona giuridica (Partita iva)
      type: string
      x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
      minLength: 11
      maxLength: 16
      pattern: ^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$

    NotificationDigitalAddress:
      description: Indirizzo di invio della notifica
      required:
        - address
        - type
      type: object
      properties:
        type:
          type: string
          description: tipo di indirizzo PEC, REM, SERCQ, ...
          enum:
            - PEC
        address:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          example: account@domain.it
          description: >-
            Indirizzo PEC o REM che il mittente della notifica intende utilizzare per
            raggiungere il destinatario.
          pattern: ^([a-zA-Z0-9]+(?:[.\-_][a-zA-Z0-9]+){0,10}@[a-zA-Z0-9]+(?:[.-][a-zA-Z0-9]+){0,10}(?:\.[a-zA-Z0-9]{2,10}))$
          maxLength: 320
          # 64 chars for the user and 255 chars for the domain, + 1 char for the '@'

    NotificationPhysicalAddress:
      description: Indirizzo fisico
      type: object
      required:
        - address
        - municipality
      properties:
        at:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Campo "presso" dell'indirizzo
          # wide range of characters
          pattern: ^.*$
          maxLength: 256
        address:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Indirizzo del domicilio fisico
          # wide range of characters
          pattern: ^.*$
          minLength: 2
          maxLength: 1024
        addressDetails:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Seconda riga dell'indirizzo fisico
          # wide range of characters
          pattern: ^.*$
          maxLength: 1024
        zip:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Codice di avviamento postale. In caso di invio estero diventa facoltativo
          minLength: 0
          maxLength: 15
          pattern: ^(\w|\ |\-)*$
        municipality:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Comune
          # wide range of characters
          pattern: ^.*$
          minLength: 2
          maxLength: 256
        municipalityDetails:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Frazione o località
          # wide range of characters
          pattern: ^.*$
          maxLength: 256
        province:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Provincia
          # wide range of characters
          pattern: ^.*$
          maxLength: 256
        foreignState:
          type: string
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          description: Denominazione paese estero
          # wide range of characters
          pattern: ^.*$
          maxLength: 256

    PaTaxId:
      description: Payment PA fiscal code
      example: '77777777777'
      type: string
      maxLength: 11
      minLength: 11
      pattern: '^\d+$'

    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
        pageNumber:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageSize:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
      additionalProperties: false

    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
      additionalProperties: false

    Page:
      type: object
      properties:
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
          maximum: 1
          minimum: 1
        totalPages:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages

    TimelineResponse:
      type: object
      required:
        - notificationStatusDetail
        - timeline
      description: Timeline IUN detail
      properties:
        notificationStatusDetail:
          $ref: '#/components/schemas/notificationStatusDetail'
        timeline:
          description: >-
            elenco dettagliato di tutto ciò che è accaduto durante il processo di notifica
          type: array
          items:
            $ref: '#/components/schemas/TimelineElement'

    TimelineElement:
      type: object
      required:
        - status
        - activeFrom
        - timestamp
        - category
        - event
      properties:
        status:
          $ref: "#/components/schemas/notificationStatusDetail"
        activeFrom:
          type: string
          description: data e ora di raggiungimento dello stato di avanzamento
          format: date-time
        timestamp:
          type: string
          description: Momento in cui avviene l'evento descritto in questo elemento
            di timeline
          format: date-time
        category:
          $ref: '#/components/schemas/TimelineElementCategory'
        event:
          type: string

    TimelineElementCategory:
      type: string
      description: >
        stato di avanzamento del processo di notifica:`
          * `SENDER_ACK_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di presa in carico per il mittente a safe storage
          * `VALIDATE_NORMALIZE_ADDRESSES_REQUEST` - Invio della richiesta di validazione e normalizzazione indirizzi fisici presenti nella richiesta di notifica
          * `NORMALIZED_ADDRESS` - Salvataggio indirizzi normalizzati
          * `REQUEST_ACCEPTED` - Richiesta di notifica accettata a seguito dei controlli di validazione
          * `REQUEST_REFUSED` - Richiesta di notifica rifiutata per fallimento di validazione
          * `SEND_COURTESY_MESSAGE` - Invio di un messaggio di cortesia
          * `GET_ADDRESS` - Disponibilità dell’indirizzo specifico (domicilio digitale di piattaforma, domicilio digitale speciale, domicilio digitale generale, indirizzo fisico sulla notifica o sui registri nazionali)
          * `PUBLIC_REGISTRY_CALL` - Richiesta ai registri pubblici per ottenere domicilio digitale generale o per ottenere indirizzo fisico da ANPR, da registro della imprese, da anagrafe tributaria.
          * `PUBLIC_REGISTRY_RESPONSE` - Ricevuta la risposta dei registri pubblici
          * `SCHEDULE_ANALOG_WORKFLOW` - Pianificazione del workflow per invio cartaceo
          * `SCHEDULE_DIGITAL_WORKFLOW` -Pianificazione del workflow per invio digitale (PEC) del secondo tentativo in caso di fallimento del primo.
          * `PREPARE_DIGITAL_DOMICILE` - Preparazione per l’invio dell’avviso digitale.Va a valutare la timeline per capire quale sarà il prossimo indirizzo da usare.
          * `SEND_DIGITAL_DOMICILE` - Invio digitale dell’avviso di notifica
          * `SEND_DIGITAL_PROGRESS` - Tentativo di Invio PEC ad un determinato indirizzo.
          * `SEND_DIGITAL_FEEDBACK` - Ottenuto esito ad un invio digitale
          * `SCHEDULE_REFINEMENT` - Pianificato il perfezionamento per decorrenza termini
          * `REFINEMENT` - Perfezionamento per decorrenza termini
          * `DIGITAL_DELIVERY_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di chiusura del workflow digitale a safe storage
          * `DIGITAL_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio digitale
          * `DIGITAL_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio digitale: tutti i tentativi di invio ai domicili digitali sono falliti.
          * `ANALOG_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio cartaceo
          * `ANALOG_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio cartaceo NOTA: se per tutti i destinatari si conclude il workflow con fallimento verrà scatenato l’evento COMPLETELY_UNREACHABLE
          * `PREPARE_SIMPLE_REGISTERED_LETTER` - Invio richiesta di prepare (preparazione ad invio) raccomandata semplice a paperChannel
          * `SEND_SIMPLE_REGISTERED_LETTER` - Invio di raccomandata semplice
          * `SEND_SIMPLE_REGISTERED_LETTER_PROGRESS` - Ricezione informazioni intermedia relative ad una notificazione cartacea semplice
          * `NOTIFICATION_VIEWED_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di presa visione a safe storage
          * `NOTIFICATION_VIEWED` - Visualizzazione della notifica (perfeziona la notifica se non già perfezionata per decorrenza termini o da altro destinatario)
          * `PREPARE_ANALOG_DOMICILE` - Invio richiesta di prepare (preparazione ad invio) cartaceo a paperChannel
          * `SEND_ANALOG_DOMICILE` - Invio cartaceo dell’avviso di notifica
          * `SEND_ANALOG_PROGRESS` - Ricezione informazioni intermedia relative ad una notificazione cartacea
          * `SEND_ANALOG_FEEDBACK` - Ricezione esito dell'invio cartaceo
          * `COMPLETELY_UNREACHABLE_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto (simile a opponibile a terzi) di completamento con fallimento del workflow di invio cartaceo
          * `COMPLETELY_UNREACHABLE` - Tutti i destinatari risultano irraggiungibili
          * `AAR_CREATION_REQUEST` - Invio della richiesta di creazione dell'AAR (Avviso di Avvenuta Ricezione) a safe storage
          * `AAR_GENERATION` - Generazione dell’AAR (Avviso di Avvenuta Ricezione)
          * `PAYMENT` - Ricezione pagamento della notifica
          * `NOT_HANDLED` - Per la sperimentazione l'invio analogico non è previsto, viene inserito tale elemento di timeline
          * `PROBABLE_SCHEDULING_ANALOG_DATE` - Data probabile di inizio del flusso analogico
          * `NOTIFICATION_CANCELLATION_REQUEST` - Richiesta di annullamento di una notifica
          * `NOTIFICATION_CANCELLED` - Notifica annullata
          * `PREPARE_ANALOG_DOMICILE_FAILURE` - Fallimento della richiesta di prepare (preparazione ad invio) cartaceo a paperChannel
      enum:
        - SENDER_ACK_CREATION_REQUEST
        - VALIDATE_NORMALIZE_ADDRESSES_REQUEST
        - NORMALIZED_ADDRESS
        - REQUEST_ACCEPTED
        - SEND_COURTESY_MESSAGE
        - GET_ADDRESS
        - PUBLIC_REGISTRY_CALL
        - PUBLIC_REGISTRY_RESPONSE
        - SCHEDULE_ANALOG_WORKFLOW
        - SCHEDULE_DIGITAL_WORKFLOW
        - PREPARE_DIGITAL_DOMICILE
        - SEND_DIGITAL_DOMICILE
        - SEND_DIGITAL_PROGRESS
        - SEND_DIGITAL_FEEDBACK
        - REFINEMENT
        - SCHEDULE_REFINEMENT
        - DIGITAL_DELIVERY_CREATION_REQUEST
        - DIGITAL_SUCCESS_WORKFLOW
        - DIGITAL_FAILURE_WORKFLOW
        - ANALOG_SUCCESS_WORKFLOW
        - ANALOG_FAILURE_WORKFLOW
        - PREPARE_SIMPLE_REGISTERED_LETTER
        - SEND_SIMPLE_REGISTERED_LETTER
        - SEND_SIMPLE_REGISTERED_LETTER_PROGRESS
        - NOTIFICATION_VIEWED_CREATION_REQUEST
        - NOTIFICATION_VIEWED
        - PREPARE_ANALOG_DOMICILE
        - SEND_ANALOG_DOMICILE
        - SEND_ANALOG_PROGRESS
        - SEND_ANALOG_FEEDBACK
        - PAYMENT
        - COMPLETELY_UNREACHABLE
        - COMPLETELY_UNREACHABLE_CREATION_REQUEST
        - REQUEST_REFUSED
        - AAR_CREATION_REQUEST
        - AAR_GENERATION
        - NOT_HANDLED
        - PROBABLE_SCHEDULING_ANALOG_DATE
        - NOTIFICATION_CANCELLATION_REQUEST
        - NOTIFICATION_CANCELLED
        - PREPARE_ANALOG_DOMICILE_FAILURE

    DocumentsResponse:
      type: object
      description: IUN Documents
      required:
        - documentsAvailable
      properties:
        documentsAvailable:
          type: boolean
          description: Indica se i documenti notificati sono ancora disponibili.
        documents:
          type: array
          description: Documenti notificati
          items:
            $ref: "#/components/schemas/Document"

    Document:
      type: object
      description: single document
      required:
        - filename
        - contentType
        - contentLength
      properties:
        filename:
          type: string
        contentType:
          type: string
          example: 'application/pdf'
        contentLength:
          type: integer
          format: int32
          example: 54092
          description: dimensione, in byte, del contenuto.

    NotificationsDelegateRequest:
      required:
        - mandateId
      type: object
      properties:
        mandateId:
          description: internal identifier of mandate
          type: string
      additionalProperties: false

    NotificationsDelegatorRequest:
      required:
        - mandateId
      type: object
      properties:
        mandateId:
          description: internal identifier of mandate
          type: string
      additionalProperties: false

    PaNotificationsRequest:
      required:
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        startDate:
          description: search interval start timestamp
          type: string
          format: date-time
        endDate:
          description: search interval end timestamp
          type: string
          format: date-time
      additionalProperties: false

    Problem:
      $ref: 'https://raw.githubusercontent.com/pagopa/pn-commons/61cdf0712f133c8c69e056abfad6ce5223242ba0/docs/openapi/pn-errors.yaml#/components/schemas/Problem'

  parameters:
    cxOperatorClientAuthFleet:
      name: x-pagopa-pn-uid
      in: header
      description: User Identifier
      required: true
      schema:
        type: string
        # ASCII printable characters
        pattern: ^[ -~]*$
        minLength: 1
        maxLength: 64

    querySizePage:
      name: size
      in: query
      description: Numero di elementi per pagina.
      required: false
      schema:
        type: integer
        default: 5
        format: int32
        maximum: 999999999
        minimum: 1

    queryNumberPage:
      name: page
      in: query
      description: Risultati di pagina che si vuole ottenere (0..N)
      required: false
      schema:
        type: integer
        default: 0
        format: int32
        maximum: 999999999
        minimum: 0

    queryStartDate:
      name: startDate
      in: query
      required: false
      schema:
        type: string

    queryEndDate:
      name: endDate
      in: query
      required: false
      schema:
        type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - ApiKeyAuth: [] # use the same name as under securitySchemes